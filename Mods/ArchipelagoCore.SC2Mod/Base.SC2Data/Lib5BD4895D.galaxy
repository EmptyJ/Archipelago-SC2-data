include "TriggerLibs/NativeLib"

include "Lib5BD4895D_h"

//--------------------------------------------------------------------------------------------------
// Library: ArchipelagoCore
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void lib5BD4895D_InitLibraries () {
    libNtve_InitVariables();
}

// Variable Initialization
bool lib5BD4895D_InitVariables_completed = false;

void lib5BD4895D_InitVariables () {
    int init_i;
    int init_i1;
    int init_j1;
    int init_i2;
    int init_i3;

    if (lib5BD4895D_InitVariables_completed) {
        return;
    }

    lib5BD4895D_InitVariables_completed = true;

    lib5BD4895D_gv_aP_Core_affectedPlayers = PlayerGroupSingle(1);
    for (init_i = 0; init_i <= 20; init_i += 1) {
        lib5BD4895D_gv_aP_Core_playerFactions[init_i] = "";
    }
    lib5BD4895D_gv_aP_Core_primalZergColor = 4;
    lib5BD4895D_gv_aP_Core_chatboxAnchor = c_anchorTopRight;
    lib5BD4895D_gv_aP_Core_chatbox_x = 500;
    lib5BD4895D_gv_aP_Core_chatbox_y = 350;
    lib5BD4895D_gv_aP_Core_chatbox_offsetY = 40;
    lib5BD4895D_gv_aP_Core_Faction_RAYNORS_RAIDERS = "rr";
    lib5BD4895D_gv_aP_Core_Faction_TERRAN_DOMINION = "td";
    lib5BD4895D_gv_aP_Core_Faction_PRIMAL_ZERG = "pz";
    lib5BD4895D_gv_aP_Core_Faction_KERRIGAN_SWARM = "ks";
    lib5BD4895D_gv_aP_Core_Faction_KERRIGAN_SWARM_SWITCHABLE_TO_PRIMAL_ZERG = "ks_pz";
    lib5BD4895D_gv_aP_Core_Faction_DAELAAM = "da";
    lib5BD4895D_gv_aP_Core_Faction_NOVA = "nova";
    lib5BD4895D_gv_aP_Core_blackScreen_dialog = c_invalidDialogId;
    lib5BD4895D_gv_aP_Core_blackScreen = c_invalidDialogControlId;
    lib5BD4895D_gv_chatbox.lv_maxmessages = 50;
    lib5BD4895D_gv_chatbox.lv_mainframe = c_invalidDialogControlId;
    lib5BD4895D_gv_chatbox.lv_chatlabel = c_invalidDialogControlId;
    lib5BD4895D_gv_chatbox.lv_countlabel = c_invalidDialogControlId;
    for (init_i = 0; init_i <= 7; init_i += 1) {
        lib5BD4895D_gv_aP_Core_rainbowColors[init_i] = 1;
    }
    lib5BD4895D_gv_aP_Core_tradeFlavorName = "Void Trade";
    lib5BD4895D_gv_aP_Core_objectiveUsedCategories = 4;
    lib5BD4895D_gv_aP_Core_objectiveDefaultTimer = TimerCreate();
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel = c_invalidDialogControlId;
    for (init_i1 = 0; init_i1 <= 8; init_i1 += 1) {
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[init_i1].lv_titleLabel = c_invalidDialogControlId;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[init_i1].lv_titleBackground = c_invalidDialogControlId;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[init_i1].lv_listPanel = c_invalidDialogControlId;
        for (init_i2 = 0; init_i2 <= 8; init_i2 += 1) {
            lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[init_i1].lv_objectives[init_i2].lv_objective = c_invalidObjectiveId;
            lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[init_i1].lv_objectives[init_i2].lv_panel = c_invalidDialogControlId;
            lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[init_i1].lv_objectives[init_i2].lv_checkbox = c_invalidDialogControlId;
            lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[init_i1].lv_objectives[init_i2].lv_label = c_invalidDialogControlId;
            lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[init_i1].lv_objectives[init_i2].lv_counterSuffix = "";
            lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[init_i1].lv_objectives[init_i2].lv_timer = lib5BD4895D_gv_aP_Core_objectiveDefaultTimer;
            for (init_i3 = 0; init_i3 <= lib5BD4895D_gv_aP_Core_LOCATIONS_PER_MAP; init_i3 += 1) {
                lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[init_i1].lv_objectives[init_i2].lv_locations[init_i3] = -1;
            }
        }
    }
    for (init_i1 = 0; init_i1 <= 8; init_i1 += 1) {
        for (init_j1 = 0; init_j1 <= 2; init_j1 += 1) {
            lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[init_i1][init_j1] = -1;
        }
    }
}

// Presets
// Functions
bool lib5BD4895D_gf_AP_Core_isLocationCollectable (int lp_locationIdLocal) {
    // Automatic Variable Declarations
    // Implementation
    return lib5BD4895D_gv_aP_Core_locationCollectable[lp_locationIdLocal];
}

void lib5BD4895D_gf_AP_Core_MapConfig_setAffectedPlayers (playergroup lp_players) {
    // Automatic Variable Declarations
    // Implementation
    lib5BD4895D_gv_aP_Core_affectedPlayers = lp_players;
}

void lib5BD4895D_gf_AP_Core_MapConfig_setPlayerFaction (int lp_player, string lp_faction) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_faction == lib5BD4895D_gv_aP_Core_Faction_KERRIGAN_SWARM_SWITCHABLE_TO_PRIMAL_ZERG)) {
        lib5BD4895D_gv_aP_Core_playerFactions[lp_player] = lib5BD4895D_gv_aP_Core_Faction_KERRIGAN_SWARM;
        lib5BD4895D_gv_aP_Core_playerSwitchableFaction[lp_player] = true;
    }
    else {
        lib5BD4895D_gv_aP_Core_playerFactions[lp_player] = lp_faction;
    }
}

void lib5BD4895D_gf_AP_Core_MapConfig_setChatboxPosition (int lp_anchor, int lp_x, int lp_y, int lp_offsetX, int lp_offsetY) {
    // Automatic Variable Declarations
    // Implementation
    lib5BD4895D_gv_aP_Core_chatboxAnchor = lp_anchor;
    lib5BD4895D_gv_aP_Core_chatbox_x = lp_x;
    lib5BD4895D_gv_aP_Core_chatbox_y = lp_y;
    lib5BD4895D_gv_aP_Core_chatbox_offsetX = lp_offsetX;
    lib5BD4895D_gv_aP_Core_chatbox_offsetY = lp_offsetY;
}

void lib5BD4895D_gf_AP_Core_MapConfig_setMapInit (trigger lp_initTrigger) {
    // Automatic Variable Declarations
    // Implementation
    lib5BD4895D_gv_aP_Core_mapInit = lp_initTrigger;
}

bool lib5BD4895D_gf_AP_Core_IsControllerNotInitialized () {
    // Automatic Variable Declarations
    // Implementation
    if (((TechTreeUnitCount(1, "AP_Core_Controller", c_techCountQueuedOrBetter) < 1) || (TechTreeUnitCount(1, "AP_Core_Controller2", c_techCountQueuedOrBetter) < 1) || (lib5BD4895D_gv_aP_Core_controller == null) || (lib5BD4895D_gv_aP_Core_controller2 == null) || (UnitIsAlive(lib5BD4895D_gv_aP_Core_controller) == false) || (UnitIsAlive(lib5BD4895D_gv_aP_Core_controller2) == false) || ((lib5BD4895D_gv_aP_Core_initFinished == true) && (UnitGetPropertyFixed(lib5BD4895D_gv_aP_Core_controller, c_unitPropLife, c_unitPropCurrent) == UnitGetPropertyFixed(lib5BD4895D_gv_aP_Core_controller, c_unitPropLifeMax, c_unitPropCurrent))))) {
        return true;
    }
    else {
        return false;
    }
}

void lib5BD4895D_gf_AP_Core_sendLocationLocal (int lp_locationIdLocal) {
    // Variable Declarations
    int lv_value;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((lp_locationIdLocal >= 0)) {
        lib5BD4895D_gv_aP_Core_locationCollectable[lp_locationIdLocal] = false;
    }

    lv_value = lp_locationIdLocal + 1;;
    if ((lib5BD4895D_gv_aP_Core_initFinished == true)) {
        if ((lib5BD4895D_gf_AP_Core_IsControllerNotInitialized())) {
            lib5BD4895D_gf_AP_Core_refreshController();
        }

        if ((lp_locationIdLocal <= 13)) {
            UnitSetPropertyFixed(lib5BD4895D_gv_aP_Core_controller, c_unitPropLife, (UnitGetPropertyInt(lib5BD4895D_gv_aP_Core_controller, c_unitPropLife, c_unitPropCurrent) - PowI(2.0, lv_value)));
            lib5BD4895D_gv_aP_Core_controllerStatus = (lib5BD4895D_gv_aP_Core_controllerStatus + PowI(2.0, lv_value));
        }
        else {
            UnitSetPropertyFixed(lib5BD4895D_gv_aP_Core_controller2, c_unitPropLife, (UnitGetPropertyInt(lib5BD4895D_gv_aP_Core_controller2, c_unitPropLife, c_unitPropCurrent) - PowI(2.0, (lv_value - 15))));
            lib5BD4895D_gv_aP_Core_controller2Status = (lib5BD4895D_gv_aP_Core_controller2Status + PowI(2.0, (lv_value - 15)));
        }
        if ((lp_locationIdLocal >= 0)) {
            lib5BD4895D_gv_aP_Core_locations_sent[lp_locationIdLocal] = true;
        }

    }

}

bool lib5BD4895D_gf_AP_Core_isLocationSent (int lp_locationIdLocal) {
    // Automatic Variable Declarations
    // Implementation
    return lib5BD4895D_gv_aP_Core_locations_sent[lp_locationIdLocal];
}

void lib5BD4895D_gf_AP_Core_refreshController () {
    // Variable Declarations
    unit lv_currentUnit;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    UnitRemove(lib5BD4895D_gv_aP_Core_controller);
    UnitRemove(lib5BD4895D_gv_aP_Core_controller2);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "AP_Core_Controller", c_unitCreateIgnorePlacement, 1, Point(0.0, 0.0));
    lib5BD4895D_gv_aP_Core_controller = UnitLastCreated();
    UnitSetPropertyFixed(lib5BD4895D_gv_aP_Core_controller, c_unitPropLife, (UnitGetPropertyInt(lib5BD4895D_gv_aP_Core_controller, c_unitPropLife, c_unitPropCurrent) - lib5BD4895D_gv_aP_Core_controllerStatus));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "AP_Core_Controller2", c_unitCreateIgnorePlacement, 1, Point(0.0, 0.0));
    lib5BD4895D_gv_aP_Core_controller2 = UnitLastCreated();
    UnitSetPropertyFixed(lib5BD4895D_gv_aP_Core_controller2, c_unitPropLife, (UnitGetPropertyInt(lib5BD4895D_gv_aP_Core_controller2, c_unitPropLife, c_unitPropCurrent) - lib5BD4895D_gv_aP_Core_controller2Status));
}

text lib5BD4895D_gf_getchatboxcontent () {
    // Variable Declarations
    int lv_index;
    text lv_tmptext;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_index = 1;
    lv_tmptext = lib5BD4895D_gv_chatbox.lv_chatmessage[0];

    // Implementation
    while ((lv_index < MinI(lib5BD4895D_gv_chatbox.lv_maxmessages, lib5BD4895D_gv_chatbox.lv_messagecount))) {
        lv_tmptext = (lib5BD4895D_gv_chatbox.lv_chatmessage[lv_index] + StringExternal("Param/Value/lib_5BD4895D_C38FCBB5") + lv_tmptext);
        lv_index += 1;
    }
    return lv_tmptext;
}

void lib5BD4895D_gf_initchatbox (int lp_anchor, int lp_sizex, int lp_sizey, int lp_offsetx, int lp_offsety) {
    // Variable Declarations
    int lv_btnsize;
    int lv_btnxoffset;
    int lv_chatlblsizex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_btnsize = 35;
    lv_btnxoffset = 35;
    lv_chatlblsizex = (lp_sizex - 110);

    // Implementation
    DialogControlHookupStandard(c_triggerControlTypePanel, "$ap_Chatbox");
    lib5BD4895D_gv_chatbox.lv_mainframe = DialogControlLastCreated();
    DialogControlSetPosition(lib5BD4895D_gv_chatbox.lv_mainframe, PlayerGroupAll(), lp_anchor, lp_offsetx, lp_offsety);
    DialogControlHookup(lib5BD4895D_gv_chatbox.lv_mainframe, c_triggerControlTypeLabel, "ChatboxContainer/ScrollableFrame/ContainerFrame/Label");
    lib5BD4895D_gv_chatbox.lv_chatlabel = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_chatbox.lv_mainframe, c_triggerControlTypeLabel, "ChatboxContainer/TotalLabel");
    lib5BD4895D_gv_chatbox.lv_countlabel = DialogControlLastCreated();
    DialogControlHookupStandard(c_triggerControlTypePanel, "$ap_Chatbox/$parent/VisibilityButtonContainer/HideButton");
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), lp_anchor, 15, 15);
}

void lib5BD4895D_gf_showhidechatbox (int lp_player, bool lp_visible) {
    // Variable Declarations
    playergroup lv_pg;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_pg = PlayerGroupSingle(lp_player);

    // Implementation
    DialogControlSetVisible(lib5BD4895D_gv_chatbox.lv_mainframe, lv_pg, true);
}

void lib5BD4895D_gf_sendchatmessage (int lp_fromplayer, string lp_message) {
    // Variable Declarations
    int lv_index;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_index = (lib5BD4895D_gv_chatbox.lv_maxmessages - 1);

    // Implementation
    while ((lv_index > 0)) {
        lib5BD4895D_gv_chatbox.lv_chatmessage[lv_index] = lib5BD4895D_gv_chatbox.lv_chatmessage[(lv_index - 1)];
        lv_index -= 1;
    }
    lib5BD4895D_gv_chatbox.lv_messagecount += 1;
    lib5BD4895D_gv_chatbox.lv_chatmessage[0] = StringToText(((IntToString(lib5BD4895D_gv_chatbox.lv_messagecount) + ": ") + lp_message));
    libNtve_gf_SetDialogItemText(lib5BD4895D_gv_chatbox.lv_chatlabel, lib5BD4895D_gf_getchatboxcontent(), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib5BD4895D_gv_chatbox.lv_countlabel, StringToText((IntToString(lib5BD4895D_gv_chatbox.lv_messagecount) + " Total")), PlayerGroupAll());
    DialogControlSendAnimationEvent(lib5BD4895D_gv_chatbox.lv_chatlabel, PlayerGroupAll(), "TextChanged");
}

trigger auto_lib5BD4895D_gf_AP_Core_rainbowController_Trigger = null;
int auto_lib5BD4895D_gf_AP_Core_rainbowController_lp_player;

void lib5BD4895D_gf_AP_Core_rainbowController (int lp_player) {
    auto_lib5BD4895D_gf_AP_Core_rainbowController_lp_player = lp_player;

    if (auto_lib5BD4895D_gf_AP_Core_rainbowController_Trigger == null) {
        auto_lib5BD4895D_gf_AP_Core_rainbowController_Trigger = TriggerCreate("auto_lib5BD4895D_gf_AP_Core_rainbowController_TriggerFunc");
    }

    TriggerExecute(auto_lib5BD4895D_gf_AP_Core_rainbowController_Trigger, false, false);
}

bool auto_lib5BD4895D_gf_AP_Core_rainbowController_TriggerFunc (bool testConds, bool runActions) {
    int lp_player = auto_lib5BD4895D_gf_AP_Core_rainbowController_lp_player;

    // Variable Declarations
    int lv_colorIndex;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lib5BD4895D_gv_aP_Core_rainbowKiller[lp_player] = false;
    while (true) {
        if ((lib5BD4895D_gv_aP_Core_rainbowKiller[lp_player] == true)) {
            break;
        }

        PlayerSetColorIndex(lp_player, lib5BD4895D_gv_aP_Core_rainbowColors[lv_colorIndex], true);
        Wait(lib5BD4895D_gv_aP_Core_rainbowCyclePeriod, c_timeReal);
        lv_colorIndex = ModI((lv_colorIndex + 1), 7);
    }
    return true;
}

void lib5BD4895D_gf_AP_Core_Trade_setTradeUnit (unit lp_unit) {
    // Automatic Variable Declarations
    // Implementation
    lib5BD4895D_gv_aP_Core_tradeUnit = lp_unit;
    lib5BD4895D_gf_AP_Core_Trade_updateTradeCharges();
}

void lib5BD4895D_gf_AP_Core_Trade_changeTradeCharges (int lp_amount) {
    // Automatic Variable Declarations
    // Implementation
    lib5BD4895D_gv_aP_Core_tradeChargeCount = MaxI((lib5BD4895D_gv_aP_Core_tradeChargeCount + lp_amount), 0);
    lib5BD4895D_gf_AP_Core_Trade_updateTradeCharges();
}

void lib5BD4895D_gf_AP_Core_Trade_updateTradeCharges () {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_SetBehaviorCount(lib5BD4895D_gv_aP_Core_tradeUnit, lib5BD4895D_gv_aP_Core_tradeChargeBehavior, lib5BD4895D_gv_aP_Core_tradeUnit, lib5BD4895D_gv_aP_Core_tradeChargeCount);
    lib5BD4895D_gv_aP_Core_tradeChargeCount = MinI(lib5BD4895D_gv_aP_Core_tradeChargeCount, UnitBehaviorCount(lib5BD4895D_gv_aP_Core_tradeUnit, lib5BD4895D_gv_aP_Core_tradeChargeBehavior));
}

int lib5BD4895D_gf_AP_Core_getPlayerColorByIndex (int lp_colorIndex) {
    // Automatic Variable Declarations
    // Implementation
    return lp_colorIndex;
}

void lib5BD4895D_gf_AP_Core_giveBonusSupplies (int lp_player, int lp_amount) {
    // Variable Declarations
    unit lv_supplyHolder;
    int lv_upgrade1SupplyCount;
    int lv_upgrade100SupplyCount;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((TechTreeUnitCount(lp_player, "AP_Core_SupplyHolder", c_techCountQueuedOrBetter) < 1)) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "AP_Core_SupplyHolder", c_unitCreateIgnorePlacement, lp_player, Point(0.0, 0.0));
    }

    lv_supplyHolder = UnitGroupUnit(UnitGroup("AP_Core_SupplyHolder", lp_player, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1);
    lv_upgrade100SupplyCount = (lp_amount / 100);
    lv_upgrade1SupplyCount = ModI(lp_amount, 100);
    libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "AP_Core_SupplyPerStack", lv_upgrade1SupplyCount);
    libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "AP_Core_SupplyPerStack100", lv_upgrade100SupplyCount);
}

void lib5BD4895D_gf_AP_Core_setFactionColor (string lp_faction, int lp_colorIndex) {
    // Variable Declarations
    int lv_color;
    int lv_currentPlayer;

    // Automatic Variable Declarations
    playergroup autoC0E582B5_g;
    playergroup auto436127A7_g;

    // Variable Initialization
    lv_color = 1;

    // Implementation
    if ((lp_faction == lib5BD4895D_gv_aP_Core_Faction_PRIMAL_ZERG) && (lp_colorIndex <= 21)) {
        lib5BD4895D_gv_aP_Core_primalZergColor = lp_colorIndex;
    }

    if ((lp_colorIndex == 16)) {
        auto436127A7_g = PlayerGroupAll();
        lv_currentPlayer = -1;
        while (true) {
            lv_currentPlayer = PlayerGroupNextPlayer(auto436127A7_g, lv_currentPlayer);
            if (lv_currentPlayer < 0) { break; }
            if ((lp_faction == (lib5BD4895D_gv_aP_Core_playerFactions[lv_currentPlayer]))) {
                lib5BD4895D_gf_AP_Core_rainbowController(lv_currentPlayer);
            }

        }
    }
    else {
        lv_color = lib5BD4895D_gf_AP_Core_getPlayerColorByIndex(lp_colorIndex);
        autoC0E582B5_g = PlayerGroupAll();
        lv_currentPlayer = -1;
        while (true) {
            lv_currentPlayer = PlayerGroupNextPlayer(autoC0E582B5_g, lv_currentPlayer);
            if (lv_currentPlayer < 0) { break; }
            if ((lp_faction == (lib5BD4895D_gv_aP_Core_playerFactions[lv_currentPlayer]))) {
                PlayerSetColorIndex(lv_currentPlayer, lv_color, true);
            }

        }
    }
}

void lib5BD4895D_gf_AP_Core_onLoadFinished () {
    // Variable Declarations
    int lv_currentPlayer;

    // Automatic Variable Declarations
    playergroup auto78288737_g;

    // Variable Initialization

    // Implementation
    lib5BD4895D_gf_initchatbox(lib5BD4895D_gv_aP_Core_chatboxAnchor, lib5BD4895D_gv_aP_Core_chatbox_x, lib5BD4895D_gv_aP_Core_chatbox_y, lib5BD4895D_gv_aP_Core_chatbox_offsetX, lib5BD4895D_gv_aP_Core_chatbox_offsetY);
    auto78288737_g = lib5BD4895D_gv_aP_Core_affectedPlayers;
    lv_currentPlayer = -1;
    while (true) {
        lv_currentPlayer = PlayerGroupNextPlayer(auto78288737_g, lv_currentPlayer);
        if (lv_currentPlayer < 0) { break; }
        lib5BD4895D_gf_showhidechatbox(lv_currentPlayer, true);
    }
    TriggerExecute(lib5BD4895D_gv_aP_Core_mapInit, true, false);
    lib5BD4895D_gv_aP_Core_initFinished = true;
    TriggerSendEvent(lib5BD4895D_gv_aP_Core_LOAD_FINISHED_EVENT);
    lib5BD4895D_gf_AP_Core_sendLocationLocal(lib5BD4895D_gv_aP_Core_locationInit);
}

void lib5BD4895D_gf_AP_Core_SwitchKerriganSwarmToPrimalZerg () {
    // Variable Declarations
    int lv_currentPlayer;
    int lv_color;

    // Automatic Variable Declarations
    playergroup auto7DAD13F7_g;

    // Variable Initialization
    lv_color = 1;

    // Implementation
    auto7DAD13F7_g = PlayerGroupAll();
    lv_currentPlayer = -1;
    while (true) {
        lv_currentPlayer = PlayerGroupNextPlayer(auto7DAD13F7_g, lv_currentPlayer);
        if (lv_currentPlayer < 0) { break; }
        if ((lib5BD4895D_gv_aP_Core_playerSwitchableFaction[lv_currentPlayer] == true) && (lib5BD4895D_gv_aP_Core_playerFactions[lv_currentPlayer] == lib5BD4895D_gv_aP_Core_Faction_KERRIGAN_SWARM)) {
            lib5BD4895D_gv_aP_Core_playerFactions[lv_currentPlayer] = lib5BD4895D_gv_aP_Core_Faction_PRIMAL_ZERG;
            lib5BD4895D_gv_aP_Core_rainbowKiller[lv_currentPlayer] = true;
            Wait(lib5BD4895D_gv_aP_Core_rainbowCyclePeriod, c_timeReal);
            Wait(lib5BD4895D_gv_aP_Core_rainbowCyclePeriod, c_timeReal);
            if ((lib5BD4895D_gv_aP_Core_primalZergColor == 16)) {
                lib5BD4895D_gf_AP_Core_rainbowController(lv_currentPlayer);
            }
            else {
                lv_color = lib5BD4895D_gf_AP_Core_getPlayerColorByIndex(lib5BD4895D_gv_aP_Core_primalZergColor);
                PlayerSetColorIndex(lv_currentPlayer, lv_color, true);
            }
        }

    }
}

void lib5BD4895D_gf_AP_Core_initObjectivePanel () {
    // Automatic Variable Declarations
    // Implementation
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeObjectivePanel, false);
    DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer/ConsoleUIContainer/AP_ObjectivePanel");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), true);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypeLabel, "AP_PrimaryObjectivesLabel");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gf_AP_Core_objectiveCategoryToInteger(lib5BD4895D_ge_APObjectiveCategory_Primary)].lv_titleLabel = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypeImage, "AP_PrimaryObjectiveBackground");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gf_AP_Core_objectiveCategoryToInteger(lib5BD4895D_ge_APObjectiveCategory_Primary)].lv_titleBackground = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypePanel, "AP_PrimaryObjectiveListBox");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gf_AP_Core_objectiveCategoryToInteger(lib5BD4895D_ge_APObjectiveCategory_Primary)].lv_listPanel = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypeLabel, "AP_SecondaryObjectivesLabel");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gf_AP_Core_objectiveCategoryToInteger(lib5BD4895D_ge_APObjectiveCategory_Secondary)].lv_titleLabel = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypeImage, "AP_SecondaryObjectiveBackground");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gf_AP_Core_objectiveCategoryToInteger(lib5BD4895D_ge_APObjectiveCategory_Secondary)].lv_titleBackground = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypePanel, "AP_SecondaryObjectiveListBox");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gf_AP_Core_objectiveCategoryToInteger(lib5BD4895D_ge_APObjectiveCategory_Secondary)].lv_listPanel = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypeLabel, "AP_ChallengeObjectivesLabel");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gf_AP_Core_objectiveCategoryToInteger(lib5BD4895D_ge_APObjectiveCategory_Challenge)].lv_titleLabel = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypeImage, "AP_ChallengeObjectiveBackground");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gf_AP_Core_objectiveCategoryToInteger(lib5BD4895D_ge_APObjectiveCategory_Challenge)].lv_titleBackground = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypePanel, "AP_ChallengeObjectiveListBox");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gf_AP_Core_objectiveCategoryToInteger(lib5BD4895D_ge_APObjectiveCategory_Challenge)].lv_listPanel = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypeLabel, "AP_MasteryObjectivesLabel");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gf_AP_Core_objectiveCategoryToInteger(lib5BD4895D_ge_APObjectiveCategory_Mastery)].lv_titleLabel = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypeImage, "AP_MasteryObjectiveBackground");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gf_AP_Core_objectiveCategoryToInteger(lib5BD4895D_ge_APObjectiveCategory_Mastery)].lv_titleBackground = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypePanel, "AP_MasteryObjectiveListBox");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gf_AP_Core_objectiveCategoryToInteger(lib5BD4895D_ge_APObjectiveCategory_Mastery)].lv_listPanel = DialogControlLastCreated();
}

void lib5BD4895D_gf_AP_Core_addObjective (int lp_objective, int lp_category, bool lp_hasCounter, string lp_counterSuffix, int lp_counterValue, int lp_counterMax, bool lp_hasTimer, timer lp_timer, bool lp_hideIfNoLocs) {
    // Variable Declarations
    int lv_new_panel;
    int lv_new_label;
    int lv_counter_value;
    int lv_categoryindex;
    int lv_rollingindex;
    int lv_visualrollingindex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_new_panel = c_invalidDialogControlId;
    lv_new_label = c_invalidDialogControlId;
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryToInteger(lp_category);
    lv_rollingindex = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex;
    lv_visualrollingindex = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex;

    // Implementation
    if ((lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex) != -1)) {
        return ;
    }

    while ((lv_rollingindex > 0) && (ObjectiveGetPriority(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[(lv_rollingindex - 1)].lv_objective) < ObjectiveGetPriority(lp_objective))) {
        lib5BD4895D_gf_AP_Core_copyObjectiveData(lv_categoryindex, (lv_rollingindex - 1), lv_rollingindex, true);
        lv_rollingindex -= 1;
    }
    if ((ObjectiveGetState(lp_objective) != c_objectiveStateHidden)) {
        DialogControlSetVisible(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_titleLabel, PlayerGroupAll(), true);
        DialogControlSetVisible(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_titleBackground, PlayerGroupAll(), true);
        DialogControlSetVisible(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_listPanel, PlayerGroupAll(), true);
    }

    DialogControlCreateInPanel(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_listPanel, c_triggerControlTypePanel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 700, 30);
    lv_new_panel = DialogControlLastCreated();
    DialogControlCreateInPanelFromTemplate(lv_new_panel, c_triggerControlTypeLabel, "ap_ObjectivePanel/AP_ObjectiveNameLabel");
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), lib5BD4895D_gf_AP_Core_objectiveText(ObjectiveGetName(lp_objective), 0, lp_hasCounter, lp_counterSuffix, lp_counterValue, lp_counterMax, lp_hasTimer, lp_timer, false), PlayerGroupAll());
    DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupAll(), 0.0, 100.0);
    lv_new_label = DialogControlLastCreated();
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_label = DialogControlLastCreated();
    DialogControlCreateInPanelFromTemplate(lv_new_panel, c_triggerControlTypeImage, "ObjectivePanel/ObjectivePanelListBoxItem/CheckboxActive");
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_checkbox = DialogControlLastCreated();
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_panel = lv_new_panel;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_category = lp_category;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_objective = lp_objective;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_checks = 0;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_hasCounter = lp_hasCounter;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_counterSuffix = lp_counterSuffix;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_counterValue = lp_counterValue;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_counterMax = lp_counterMax;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_hasTimer = lp_hasTimer;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_timer = lp_timer;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_hideIfNoLocs = lp_hideIfNoLocs;
    if ((ObjectiveGetState(lp_objective) == c_objectiveStateHidden)) {
        DialogControlSetVisible(lv_new_panel, PlayerGroupAll(), false);
    }

    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex += 1;
    lib5BD4895D_gf_AP_Core_resizeObjectivePanel();
    lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout(lv_categoryindex, lv_rollingindex, lp_hasTimer);
}

void lib5BD4895D_gf_AP_Core_addCategoryObjectiveSimple (int lp_objective, int lp_category, bool lp_hideIfNoLocs) {
    // Automatic Variable Declarations
    // Implementation
    lib5BD4895D_gf_AP_Core_addObjective(lp_objective, lp_category, false, "", 0, 0, false, lib5BD4895D_gv_aP_Core_objectiveDefaultTimer, lp_hideIfNoLocs);
}

void lib5BD4895D_gf_AP_Core_addCategoryObjectiveWithCounter (int lp_objective, int lp_category, string lp_counterSuffix, int lp_counterValue, int lp_counterMax, bool lp_hideIfNoLocs) {
    // Automatic Variable Declarations
    // Implementation
    lib5BD4895D_gf_AP_Core_addObjective(lp_objective, lp_category, true, lp_counterSuffix, lp_counterValue, lp_counterMax, false, lib5BD4895D_gv_aP_Core_objectiveDefaultTimer, lp_hideIfNoLocs);
}

void lib5BD4895D_gf_AP_Core_addCategoryObjectiveWithTimer (int lp_objective, int lp_category, timer lp_timer, bool lp_hideIfNoLocs) {
    // Automatic Variable Declarations
    // Implementation
    lib5BD4895D_gf_AP_Core_addObjective(lp_objective, lp_category, false, "", 0, 0, true, lp_timer, lp_hideIfNoLocs);
}

void lib5BD4895D_gf_AP_Core_addCategoryObjectiveFromData (int lp_objective, int lp_category, string lp_data, string lp_counterSuffix, int lp_counterValue, bool lp_hideIfNoLocs) {
    // Variable Declarations
    int lv_counterMax;
    text lv_name;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_counterMax = CatalogFieldValueGetAsInt(c_gameCatalogObjective, lp_data, "RequiredCount", c_playerAny);
    lv_name = StringExternal(CatalogFieldValueGet(c_gameCatalogObjective, lp_data, "Name", c_playerAny));

    // Implementation
    ObjectiveSetName(lp_objective, lv_name);
    if ((lv_counterMax > 1)) {
        lib5BD4895D_gf_AP_Core_addObjective(lp_objective, lp_category, true, lp_counterSuffix, lp_counterValue, lv_counterMax, false, lib5BD4895D_gv_aP_Core_objectiveDefaultTimer, lp_hideIfNoLocs);
    }
    else {
        lib5BD4895D_gf_AP_Core_addObjective(lp_objective, lp_category, false, "", 0, 0, false, lib5BD4895D_gv_aP_Core_objectiveDefaultTimer, lp_hideIfNoLocs);
    }
}

void lib5BD4895D_gf_AP_Core_enableObjectiveCounter (int lp_objective, string lp_counterSuffix, int lp_counterValue, int lp_counterMax) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if ((lv_objectiveindex == -1)) {
        return ;
    }

    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_hasCounter = true;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_counterValue = lp_counterValue;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_counterMax = lp_counterMax;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_counterSuffix = lp_counterSuffix;
    lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate(lv_categoryindex, lv_objectiveindex);
}

trigger auto_lib5BD4895D_gf_AP_Core_setObjectiveChecks_Trigger = null;
int auto_lib5BD4895D_gf_AP_Core_setObjectiveChecks_lp_objective;
int auto_lib5BD4895D_gf_AP_Core_setObjectiveChecks_lp_checks;

void lib5BD4895D_gf_AP_Core_setObjectiveChecks (int lp_objective, int lp_checks) {
    auto_lib5BD4895D_gf_AP_Core_setObjectiveChecks_lp_objective = lp_objective;
    auto_lib5BD4895D_gf_AP_Core_setObjectiveChecks_lp_checks = lp_checks;

    if (auto_lib5BD4895D_gf_AP_Core_setObjectiveChecks_Trigger == null) {
        auto_lib5BD4895D_gf_AP_Core_setObjectiveChecks_Trigger = TriggerCreate("auto_lib5BD4895D_gf_AP_Core_setObjectiveChecks_TriggerFunc");
    }

    TriggerExecute(auto_lib5BD4895D_gf_AP_Core_setObjectiveChecks_Trigger, false, false);
}

bool auto_lib5BD4895D_gf_AP_Core_setObjectiveChecks_TriggerFunc (bool testConds, bool runActions) {
    int lp_objective = auto_lib5BD4895D_gf_AP_Core_setObjectiveChecks_lp_objective;
    int lp_checks = auto_lib5BD4895D_gf_AP_Core_setObjectiveChecks_lp_checks;

    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if ((lv_objectiveindex == -1)) {
        return true;
    }

    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_checks = lp_checks;
    lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate(lv_categoryindex, lv_objectiveindex);
    return true;
}

trigger auto_lib5BD4895D_gf_AP_Core_updateObjectiveChecks_Trigger = null;
int auto_lib5BD4895D_gf_AP_Core_updateObjectiveChecks_lp_objective;

void lib5BD4895D_gf_AP_Core_updateObjectiveChecks (int lp_objective) {
    auto_lib5BD4895D_gf_AP_Core_updateObjectiveChecks_lp_objective = lp_objective;

    if (auto_lib5BD4895D_gf_AP_Core_updateObjectiveChecks_Trigger == null) {
        auto_lib5BD4895D_gf_AP_Core_updateObjectiveChecks_Trigger = TriggerCreate("auto_lib5BD4895D_gf_AP_Core_updateObjectiveChecks_TriggerFunc");
    }

    TriggerExecute(auto_lib5BD4895D_gf_AP_Core_updateObjectiveChecks_Trigger, false, false);
}

bool auto_lib5BD4895D_gf_AP_Core_updateObjectiveChecks_TriggerFunc (bool testConds, bool runActions) {
    int lp_objective = auto_lib5BD4895D_gf_AP_Core_updateObjectiveChecks_lp_objective;

    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if ((lv_objectiveindex == -1)) {
        return true;
    }

    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_checks = lib5BD4895D_gf_AP_Core_getNumOfObjectiveLocations(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_objective);
    lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate(lv_categoryindex, lv_objectiveindex);
    return true;
}

trigger auto_lib5BD4895D_gf_AP_Core_updateAllObjectiveChecks_Trigger = null;

void lib5BD4895D_gf_AP_Core_updateAllObjectiveChecks () {
    if (auto_lib5BD4895D_gf_AP_Core_updateAllObjectiveChecks_Trigger == null) {
        auto_lib5BD4895D_gf_AP_Core_updateAllObjectiveChecks_Trigger = TriggerCreate("auto_lib5BD4895D_gf_AP_Core_updateAllObjectiveChecks_TriggerFunc");
    }

    TriggerExecute(auto_lib5BD4895D_gf_AP_Core_updateAllObjectiveChecks_Trigger, false, false);
}

bool auto_lib5BD4895D_gf_AP_Core_updateAllObjectiveChecks_TriggerFunc (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;

    // Automatic Variable Declarations
    int auto1065C613_ae;
    const int auto1065C613_ai = 1;
    int auto31852837_ae;
    const int auto31852837_ai = 1;

    // Variable Initialization

    // Implementation
    auto1065C613_ae = (lib5BD4895D_gv_aP_Core_objectiveUsedCategories - 1);
    lv_categoryindex = 0;
    for ( ; ( (auto1065C613_ai >= 0 && lv_categoryindex <= auto1065C613_ae) || (auto1065C613_ai < 0 && lv_categoryindex >= auto1065C613_ae) ) ; lv_categoryindex += auto1065C613_ai ) {
        auto31852837_ae = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex - 1);
        lv_objectiveindex = 0;
        for ( ; ( (auto31852837_ai >= 0 && lv_objectiveindex <= auto31852837_ae) || (auto31852837_ai < 0 && lv_objectiveindex >= auto31852837_ae) ) ; lv_objectiveindex += auto31852837_ai ) {
            if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_objective != c_invalidObjectiveId)) {
                lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_checks = lib5BD4895D_gf_AP_Core_getNumOfObjectiveLocations(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_objective);
                lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate(lv_categoryindex, lv_objectiveindex);
            }

        }
    }
    return true;
}

trigger auto_lib5BD4895D_gf_AP_Core_setObjectiveCounter_Trigger = null;
int auto_lib5BD4895D_gf_AP_Core_setObjectiveCounter_lp_objective;
int auto_lib5BD4895D_gf_AP_Core_setObjectiveCounter_lp_counterValue;

void lib5BD4895D_gf_AP_Core_setObjectiveCounter (int lp_objective, int lp_counterValue) {
    auto_lib5BD4895D_gf_AP_Core_setObjectiveCounter_lp_objective = lp_objective;
    auto_lib5BD4895D_gf_AP_Core_setObjectiveCounter_lp_counterValue = lp_counterValue;

    if (auto_lib5BD4895D_gf_AP_Core_setObjectiveCounter_Trigger == null) {
        auto_lib5BD4895D_gf_AP_Core_setObjectiveCounter_Trigger = TriggerCreate("auto_lib5BD4895D_gf_AP_Core_setObjectiveCounter_TriggerFunc");
    }

    TriggerExecute(auto_lib5BD4895D_gf_AP_Core_setObjectiveCounter_Trigger, false, false);
}

bool auto_lib5BD4895D_gf_AP_Core_setObjectiveCounter_TriggerFunc (bool testConds, bool runActions) {
    int lp_objective = auto_lib5BD4895D_gf_AP_Core_setObjectiveCounter_lp_objective;
    int lp_counterValue = auto_lib5BD4895D_gf_AP_Core_setObjectiveCounter_lp_counterValue;

    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if ((lv_objectiveindex == -1)) {
        return true;
    }

    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_counterValue = lp_counterValue;
    lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate(lv_categoryindex, lv_objectiveindex);
    return true;
}

void lib5BD4895D_gf_AP_Core_setObjectiveCounterSuffix (int lp_objective, string lp_counterSuffix) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if ((lv_objectiveindex == -1)) {
        return ;
    }

    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_counterSuffix = lp_counterSuffix;
    lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate(lv_categoryindex, lv_objectiveindex);
}

void lib5BD4895D_gf_AP_Core_setObjectiveCounterMax (int lp_objective, int lp_counterMax) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if ((lv_objectiveindex == -1)) {
        return ;
    }

    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_counterMax = lp_counterMax;
    lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate(lv_categoryindex, lv_objectiveindex);
}

void lib5BD4895D_gf_AP_Core_updateObjectiveDescription (int lp_objective) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_deprecatedObjectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if ((lv_objectiveindex == -1)) {
        return ;
    }

}

trigger auto_lib5BD4895D_gf_AP_Core_addObjectiveExtraLine_Trigger = null;
int auto_lib5BD4895D_gf_AP_Core_addObjectiveExtraLine_lp_objective;

void lib5BD4895D_gf_AP_Core_addObjectiveExtraLine (int lp_objective) {
    auto_lib5BD4895D_gf_AP_Core_addObjectiveExtraLine_lp_objective = lp_objective;

    if (auto_lib5BD4895D_gf_AP_Core_addObjectiveExtraLine_Trigger == null) {
        auto_lib5BD4895D_gf_AP_Core_addObjectiveExtraLine_Trigger = TriggerCreate("auto_lib5BD4895D_gf_AP_Core_addObjectiveExtraLine_TriggerFunc");
    }

    TriggerExecute(auto_lib5BD4895D_gf_AP_Core_addObjectiveExtraLine_Trigger, false, false);
}

bool auto_lib5BD4895D_gf_AP_Core_addObjectiveExtraLine_TriggerFunc (bool testConds, bool runActions) {
    int lp_objective = auto_lib5BD4895D_gf_AP_Core_addObjectiveExtraLine_lp_objective;

    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;
    int lv_rollingindex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if ((lv_objectiveindex == -1)) {
        return true;
    }

    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_extraLines += 1;
    DialogControlSetSize(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_panel, PlayerGroupAll(), 700, (30 + 16 * lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_extraLines));
    lib5BD4895D_gf_AP_Core_resizeObjectivePanel();
    return true;
}

void lib5BD4895D_gf_AP_Core_deleteObjective (int lp_objective) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;
    int lv_rollingindex;
    int lv_visualrollingindex;
    int lv_timerindex;
    int lv_timercopyindex;

    // Automatic Variable Declarations
    int auto7A5E3CC7_ae;
    const int auto7A5E3CC7_ai = 1;

    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if ((lv_objectiveindex == -1)) {
        return ;
    }

    DialogControlDestroy(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_panel);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex - 1);
    auto7A5E3CC7_ae = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex - 1);
    lv_rollingindex = lv_objectiveindex;
    for ( ; ( (auto7A5E3CC7_ai >= 0 && lv_rollingindex <= auto7A5E3CC7_ae) || (auto7A5E3CC7_ai < 0 && lv_rollingindex >= auto7A5E3CC7_ae) ) ; lv_rollingindex += auto7A5E3CC7_ai ) {
        lib5BD4895D_gf_AP_Core_copyObjectiveData(lv_categoryindex, (lv_rollingindex + 1), lv_rollingindex, true);
    }
    lib5BD4895D_gf_AP_Core_resizeObjectivePanel();
}

void lib5BD4895D_gf_AP_Core_setObjectiveVisibility (int lp_objective, bool lp_visibility) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;
    int lv_rollingindex;
    bool lv_hidecategory;
    int lv_visualrollingindex;
    int lv_locationscount;

    // Automatic Variable Declarations
    int autoBC92EBC7_ae;
    const int autoBC92EBC7_ai = 1;

    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);
    lv_hidecategory = true;
    lv_locationscount = lib5BD4895D_gf_AP_Core_getNumOfObjectiveLocations(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_objective);

    // Implementation
    if (((lv_objectiveindex == -1) || ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_hideIfNoLocs == true) && (lv_locationscount <= 0)))) {
        return ;
    }

    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_checks = lv_locationscount;
    ObjectiveShow(lp_objective, PlayerGroupAll(), lp_visibility);
    if ((lp_visibility == false)) {
        DialogControlSetVisible(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_panel, PlayerGroupAll(), false);
        autoBC92EBC7_ae = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex - 1);
        lv_rollingindex = 0;
        for ( ; ( (autoBC92EBC7_ai >= 0 && lv_rollingindex <= autoBC92EBC7_ae) || (autoBC92EBC7_ai < 0 && lv_rollingindex >= autoBC92EBC7_ae) ) ; lv_rollingindex += autoBC92EBC7_ai ) {
            if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_objective != c_invalidObjectiveId) && (ObjectiveGetState(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_objective) != c_objectiveStateHidden)) {
                lv_hidecategory = false;
                break;
            }

        }
        if ((lv_hidecategory == true)) {
            DialogControlSetVisible(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_titleLabel, PlayerGroupAll(), false);
            DialogControlSetVisible(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_titleBackground, PlayerGroupAll(), false);
            DialogControlSetVisible(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_listPanel, PlayerGroupAll(), false);
        }

    }
    else {
        DialogControlSetVisible(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_panel, PlayerGroupAll(), true);
        DialogControlSetVisible(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_titleLabel, PlayerGroupAll(), true);
        DialogControlSetVisible(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_titleBackground, PlayerGroupAll(), true);
        DialogControlSetVisible(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_listPanel, PlayerGroupAll(), true);
        libNtve_gf_SetDialogItemTextWriteout(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_label, true, PlayerGroupAll());
        lib5BD4895D_gf_AP_Core_updateObjectiveText(lv_categoryindex, lv_objectiveindex);
        lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout(lv_categoryindex, lv_objectiveindex, false);
    }
    lib5BD4895D_gf_AP_Core_resizeObjectivePanel();
}

trigger auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_Trigger = null;
int auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_lp_categoryIndex;
int auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_lp_objectiveIndex;
bool auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_lp_addTimer;

void lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout (int lp_categoryIndex, int lp_objectiveIndex, bool lp_addTimer) {
    auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_lp_categoryIndex = lp_categoryIndex;
    auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_lp_objectiveIndex = lp_objectiveIndex;
    auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_lp_addTimer = lp_addTimer;

    if (auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_Trigger == null) {
        auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_Trigger = TriggerCreate("auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_TriggerFunc");
    }

    TriggerExecute(auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_Trigger, false, false);
}

bool auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_TriggerFunc (bool testConds, bool runActions) {
    int lp_categoryIndex = auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_lp_categoryIndex;
    int lp_objectiveIndex = auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_lp_objectiveIndex;
    bool lp_addTimer = auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_lp_addTimer;

    // Variable Declarations
    int lv_label;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_label = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryIndex].lv_objectives[lp_objectiveIndex].lv_label;

    // Implementation
    while (!((lib5BD4895D_gv_aP_Core_objectivePanel.lv_fadeWait == false))) {
        Wait(0.1, c_timeGame);
    }
    if ((ObjectiveGetState(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryIndex].lv_objectives[lp_objectiveIndex].lv_objective) == c_objectiveStateHidden)) {
    }
    else {
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryIndex].lv_objectives[lp_objectiveIndex].lv_waiting = true;
        DialogControlFadeTransparency(lv_label, PlayerGroupAll(), 2.5, 0.0);
        SoundPlayForPlayer(SoundLink("UI_ObjectiveText", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        Wait(2.5, c_timeReal);
        SoundStop(SoundLastPlayed(), false);
        libNtve_gf_SetDialogItemTextWriteout(lv_label, false, PlayerGroupAll());
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryIndex].lv_objectives[lp_objectiveIndex].lv_waiting = false;
    }
    if ((lp_addTimer == true) && (lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryIndex].lv_objectives[lp_objectiveIndex].lv_hasTimer == true)) {
        TriggerEnable(lib5BD4895D_gt_AP_Core_objectiveTimerUpdate, true);
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex][0] = lp_categoryIndex;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex][1] = lp_objectiveIndex;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex += 1;
    }

    return true;
}

trigger auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_Trigger = null;
int auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_lp_categoryIndex;
int auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_lp_objectiveIndex;

void lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate (int lp_categoryIndex, int lp_objectiveIndex) {
    auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_lp_categoryIndex = lp_categoryIndex;
    auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_lp_objectiveIndex = lp_objectiveIndex;

    if (auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_Trigger == null) {
        auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_Trigger = TriggerCreate("auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_TriggerFunc");
    }

    TriggerExecute(auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_Trigger, false, false);
}

bool auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_TriggerFunc (bool testConds, bool runActions) {
    int lp_categoryIndex = auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_lp_categoryIndex;
    int lp_objectiveIndex = auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_lp_objectiveIndex;

    // Automatic Variable Declarations
    // Implementation
    while (!((lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryIndex].lv_objectives[lp_objectiveIndex].lv_waiting == false) && (lib5BD4895D_gv_aP_Core_objectivePanel.lv_fadeWait == false))) {
        Wait(0.1, c_timeGame);
    }
    if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryIndex].lv_objectives[lp_objectiveIndex].lv_objective == c_invalidObjectiveId)) {
        return true;
    }

    lib5BD4895D_gf_AP_Core_updateObjectiveText(lp_categoryIndex, lp_objectiveIndex);
    return true;
}

void lib5BD4895D_gf_AP_Core_resizeObjectivePanel () {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;
    int lv_objectivecount;
    int lv_visualindex;
    int lv_extralines;
    int lv_hidden;

    // Automatic Variable Declarations
    int auto868030BA_ae;
    const int auto868030BA_ai = 1;
    int autoFD7B9CCE_ae;
    const int autoFD7B9CCE_ai = 1;

    // Variable Initialization

    // Implementation
    auto868030BA_ae = (lib5BD4895D_gv_aP_Core_objectiveUsedCategories - 1);
    lv_categoryindex = 0;
    for ( ; ( (auto868030BA_ai >= 0 && lv_categoryindex <= auto868030BA_ae) || (auto868030BA_ai < 0 && lv_categoryindex >= auto868030BA_ae) ) ; lv_categoryindex += auto868030BA_ai ) {
        lv_objectivecount = 0;
        lv_extralines = 0;
        lv_hidden = 0;
        autoFD7B9CCE_ae = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex - 1);
        lv_objectiveindex = 0;
        for ( ; ( (autoFD7B9CCE_ai >= 0 && lv_objectiveindex <= autoFD7B9CCE_ae) || (autoFD7B9CCE_ai < 0 && lv_objectiveindex >= autoFD7B9CCE_ae) ) ; lv_objectiveindex += autoFD7B9CCE_ai ) {
            if ((ObjectiveGetState(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_objective) == c_objectiveStateHidden)) {
                lv_hidden += 1;
            }
            else {
                lv_extralines += lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_extraLines;
                lv_objectivecount += 1;
            }
            lv_visualindex = lv_objectiveindex;
            while ((lv_visualindex > 0) && (ObjectiveGetState(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[(lv_visualindex - 1)].lv_objective) == c_objectiveStateHidden)) {
                lv_visualindex -= 1;
            }
            if ((lv_visualindex > 0)) {
                DialogControlSetPositionRelative(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_panel, PlayerGroupAll(), c_anchorTopLeft, lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[(lv_visualindex - 1)].lv_panel, c_anchorBottomLeft, 0, 5);
            }
            else {
                DialogControlSetPositionRelative(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_panel, PlayerGroupAll(), c_anchorTopLeft, lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_listPanel, c_anchorTopLeft, 0, 5);
            }
        }
        if ((lv_objectivecount > 0)) {
            DialogControlSetSize(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_listPanel, PlayerGroupAll(), 750, (35 * (lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex - lv_hidden) + (16 * lv_extralines) + 10));
        }
        else {
            DialogControlSetSize(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_listPanel, PlayerGroupAll(), 750, -22);
        }
    }
}

int lib5BD4895D_gf_AP_Core_objectiveCategoryToInteger (int lp_category) {
    // Automatic Variable Declarations
    int autoE03B3EA8_val;

    // Implementation
    autoE03B3EA8_val = lp_category;
    if (autoE03B3EA8_val == lib5BD4895D_ge_APObjectiveCategory_Primary) {
        return 0;
    }
    else if (autoE03B3EA8_val == lib5BD4895D_ge_APObjectiveCategory_Secondary) {
        return 1;
    }
    else if (autoE03B3EA8_val == lib5BD4895D_ge_APObjectiveCategory_Extra) {
        return 1;
    }
    else if (autoE03B3EA8_val == lib5BD4895D_ge_APObjectiveCategory_Challenge) {
        return 2;
    }
    else if (autoE03B3EA8_val == lib5BD4895D_ge_APObjectiveCategory_Mastery) {
        return 3;
    }
    else {
    }
    return 0;
}

int lib5BD4895D_gf_AP_Core_objectiveIntegerToCategory (int lp_category) {
    // Automatic Variable Declarations
    int autoB7FC5013_val;

    // Implementation
    autoB7FC5013_val = lp_category;
    if (autoB7FC5013_val == 0) {
        return lib5BD4895D_ge_APObjectiveCategory_Primary;
    }
    else if (autoB7FC5013_val == 1) {
        return lib5BD4895D_ge_APObjectiveCategory_Secondary;
    }
    else if (autoB7FC5013_val == 2) {
        return lib5BD4895D_ge_APObjectiveCategory_Challenge;
    }
    else if (autoB7FC5013_val == 3) {
        return lib5BD4895D_ge_APObjectiveCategory_Mastery;
    }
    else {
    }
    return 0;
}

int lib5BD4895D_gf_AP_Core_objectiveIndex (int lp_objective, int lp_categoryIndex) {
    // Variable Declarations
    int lv_index;

    // Automatic Variable Declarations
    int auto8ED4B630_ae;
    const int auto8ED4B630_ai = 1;

    // Variable Initialization

    // Implementation
    if (((lp_categoryIndex >= 0) && (lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryIndex].lv_rollingIndex > 0))) {
        auto8ED4B630_ae = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryIndex].lv_rollingIndex - 1);
        lv_index = 0;
        for ( ; ( (auto8ED4B630_ai >= 0 && lv_index <= auto8ED4B630_ae) || (auto8ED4B630_ai < 0 && lv_index >= auto8ED4B630_ae) ) ; lv_index += auto8ED4B630_ai ) {
            if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryIndex].lv_objectives[lv_index].lv_objective == lp_objective)) {
                return lv_index;
            }

        }
    }

    return -1;
}

void lib5BD4895D_gf_AP_Core_copyObjectiveData (int lp_category, int lp_from, int lp_to, bool lp_cleanFrom) {
    // Variable Declarations
    bool lv_previoustimer;
    int lv_timerindex;
    int lv_timerrollingindex;
    int lv_locationsindex;

    // Automatic Variable Declarations
    const int auto46C95F9A_ae = lib5BD4895D_gv_aP_Core_LOCATIONS_PER_MAP;
    const int auto46C95F9A_ai = 1;
    int auto9DE4E82E_ae;
    const int auto9DE4E82E_ai = 1;
    int autoC1E1AF7F_ae;
    const int autoC1E1AF7F_ai = 1;
    int autoAE91E7AF_ae;
    const int autoAE91E7AF_ai = 1;
    const int autoAD4F72F2_ae = lib5BD4895D_gv_aP_Core_LOCATIONS_PER_MAP;
    const int autoAD4F72F2_ai = 1;

    // Variable Initialization
    lv_previoustimer = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_hasTimer;

    // Implementation
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_panel = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_panel;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_label = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_label;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_category = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_category;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_checks = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_checks;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_checkbox = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_checkbox;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_objective = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_objective;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_hasCounter = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_hasCounter;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_counterSuffix = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_counterSuffix;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_counterValue = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_counterValue;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_counterMax = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_counterMax;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_hasTimer = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_hasTimer;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_timer = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_timer;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_extraLines = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_extraLines;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_waiting = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_waiting;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_finished = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_finished;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_hideIfNoLocs = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_hideIfNoLocs;
    lv_locationsindex = 0;
    for ( ; ( (auto46C95F9A_ai >= 0 && lv_locationsindex <= auto46C95F9A_ae) || (auto46C95F9A_ai < 0 && lv_locationsindex >= auto46C95F9A_ae) ) ; lv_locationsindex += auto46C95F9A_ai ) {
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_locations[lv_locationsindex] = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_locations[lv_locationsindex];
    }
    if ((lv_previoustimer == true)) {
        auto9DE4E82E_ae = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex - 1);
        lv_timerindex = 0;
        for ( ; ( (auto9DE4E82E_ai >= 0 && lv_timerindex <= auto9DE4E82E_ae) || (auto9DE4E82E_ai < 0 && lv_timerindex >= auto9DE4E82E_ae) ) ; lv_timerindex += auto9DE4E82E_ai ) {
            if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lv_timerindex][0] == lp_category) && (lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lv_timerindex][1] == lp_to)) {
                lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex - 1);
                autoC1E1AF7F_ae = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex - 1);
                lv_timerrollingindex = lv_timerindex;
                for ( ; ( (autoC1E1AF7F_ai >= 0 && lv_timerrollingindex <= autoC1E1AF7F_ae) || (autoC1E1AF7F_ai < 0 && lv_timerrollingindex >= autoC1E1AF7F_ae) ) ; lv_timerrollingindex += autoC1E1AF7F_ai ) {
                    lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lv_timerrollingindex][0] = lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[(lv_timerrollingindex + 1)][0];
                    lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lv_timerrollingindex][1] = lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[(lv_timerrollingindex + 1)][1];
                }
                lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex][0] = -1;
                lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex][1] = -1;
            }

        }
        if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex == 0)) {
            TriggerEnable(lib5BD4895D_gt_AP_Core_objectiveTimerUpdate, false);
        }

    }

    if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_hasTimer == true)) {
        autoAE91E7AF_ae = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex - 1);
        lv_timerindex = 0;
        for ( ; ( (autoAE91E7AF_ai >= 0 && lv_timerindex <= autoAE91E7AF_ae) || (autoAE91E7AF_ai < 0 && lv_timerindex >= autoAE91E7AF_ae) ) ; lv_timerindex += autoAE91E7AF_ai ) {
            if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lv_timerindex][0] == lp_category) && (lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lv_timerindex][1] == lp_from)) {
                lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lv_timerindex][1] = lp_to;
            }

        }
    }

    if ((lp_cleanFrom == true)) {
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_panel = c_invalidDialogControlId;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_label = c_invalidDialogControlId;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_category = lib5BD4895D_ge_APObjectiveCategory_Primary;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_checkbox = c_invalidDialogControlId;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_objective = c_invalidObjectiveId;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_checks = 0;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_hasCounter = false;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_counterSuffix = "";
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_counterValue = 0;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_counterMax = 0;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_hasTimer = false;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_timer = lib5BD4895D_gv_aP_Core_objectiveDefaultTimer;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_extraLines = 0;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_waiting = false;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_finished = false;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_hideIfNoLocs = false;
        lv_locationsindex = 0;
        for ( ; ( (autoAD4F72F2_ai >= 0 && lv_locationsindex <= autoAD4F72F2_ae) || (autoAD4F72F2_ai < 0 && lv_locationsindex >= autoAD4F72F2_ae) ) ; lv_locationsindex += autoAD4F72F2_ai ) {
            lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_locations[lv_locationsindex] = -1;
        }
    }

}

int lib5BD4895D_gf_AP_Core_objectiveCategoryIndex (int lp_objective) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;
    int lv_category;

    // Automatic Variable Declarations
    int auto52960805_ae;
    const int auto52960805_ai = 1;
    int auto5F9B6870_ae;
    const int auto5F9B6870_ai = 1;

    // Variable Initialization

    // Implementation
    auto52960805_ae = (lib5BD4895D_gv_aP_Core_objectiveUsedCategories - 1);
    lv_categoryindex = 0;
    for ( ; ( (auto52960805_ai >= 0 && lv_categoryindex <= auto52960805_ae) || (auto52960805_ai < 0 && lv_categoryindex >= auto52960805_ae) ) ; lv_categoryindex += auto52960805_ai ) {
        auto5F9B6870_ae = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex - 1);
        lv_objectiveindex = 0;
        for ( ; ( (auto5F9B6870_ai >= 0 && lv_objectiveindex <= auto5F9B6870_ae) || (auto5F9B6870_ai < 0 && lv_objectiveindex >= auto5F9B6870_ae) ) ; lv_objectiveindex += auto5F9B6870_ai ) {
            if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_objective == lp_objective)) {
                return lib5BD4895D_gf_AP_Core_objectiveCategoryToInteger(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_category);
            }

        }
    }
    return -1;
}

int lib5BD4895D_gf_AP_Core_deprecatedObjectiveCategoryIndex (int lp_objective) {
    // Automatic Variable Declarations
    // Implementation
    if ((ObjectiveGetPrimary(lp_objective) == true)) {
        return lib5BD4895D_gf_AP_Core_objectiveCategoryToInteger(lib5BD4895D_ge_APObjectiveCategory_Primary);
    }
    else {
        return lib5BD4895D_gf_AP_Core_objectiveCategoryToInteger(lib5BD4895D_ge_APObjectiveCategory_Secondary);
    }
}

text lib5BD4895D_gf_AP_Core_objectiveText (text lp_text, int lp_checks, bool lp_hasCounter, string lp_counterSuffix, int lp_counterValue, int lp_counterMax, bool lp_hasTimer, timer lp_timer, bool lp_finished) {
    // Variable Declarations
    text lv_checkstext;
    text lv_countertext;
    text lv_countersuffix;
    text lv_countermax;
    text lv_timer;
    text lv_finishedstrip;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_checkstext = StringToText("");
    lv_countertext = StringToText("");
    lv_countersuffix = StringToText("");
    lv_countermax = StringToText("");
    lv_timer = StringToText("");
    lv_finishedstrip = StringToText("");

    // Implementation
    if ((lp_checks > 0)) {
        if ((lp_checks == 1)) {
            TextExpressionSetToken("Param/Expression/lib_5BD4895D_9D1F97B6", "style_start", StringExternal("Param/Value/lib_5BD4895D_E71C1AAC"));
            TextExpressionSetToken("Param/Expression/lib_5BD4895D_9D1F97B6", "text", StringExternal("Param/Value/lib_5BD4895D_E339DF85"));
            TextExpressionSetToken("Param/Expression/lib_5BD4895D_9D1F97B6", "style_end", StringExternal("Param/Value/lib_5BD4895D_CF8E4FDB"));
            lv_checkstext = (TextExpressionAssemble("Param/Expression/lib_5BD4895D_9D1F97B6"));
        }
        else {
            TextExpressionSetToken("Param/Expression/lib_5BD4895D_AA94B924", "style_start", StringExternal("Param/Value/lib_5BD4895D_0BF8E2A4"));
            TextExpressionSetToken("Param/Expression/lib_5BD4895D_AA94B924", "checks", IntToText(lp_checks));
            TextExpressionSetToken("Param/Expression/lib_5BD4895D_AA94B924", "text", StringExternal("Param/Value/lib_5BD4895D_08B14846"));
            TextExpressionSetToken("Param/Expression/lib_5BD4895D_AA94B924", "style_end", StringExternal("Param/Value/lib_5BD4895D_89711AAB"));
            lv_checkstext = (TextExpressionAssemble("Param/Expression/lib_5BD4895D_AA94B924"));
        }
    }

    if ((lp_hasCounter == true)) {
        if ((StringLength(lp_counterSuffix) > 0)) {
            if ((StringFind(lp_counterSuffix, ")", c_stringCase) == 1)) {
                lv_countersuffix = StringToText(lp_counterSuffix);
            }
            else {
                lv_countersuffix = (StringExternal("Param/Value/lib_5BD4895D_237AD9BA") + StringToText(lp_counterSuffix));
            }
        }

        if ((lp_counterMax > 0)) {
            lv_countermax = (StringExternal("Param/Value/lib_5BD4895D_C6C79B7C") + IntToText(lp_counterMax));
        }

        TextExpressionSetToken("Param/Expression/lib_5BD4895D_A595B870", "style_start", StringExternal("Param/Value/lib_5BD4895D_BDCEB2A5"));
        TextExpressionSetToken("Param/Expression/lib_5BD4895D_A595B870", "counter_val", IntToText(lp_counterValue));
        TextExpressionSetToken("Param/Expression/lib_5BD4895D_A595B870", "counter_max", lv_countermax);
        TextExpressionSetToken("Param/Expression/lib_5BD4895D_A595B870", "counter_suffix", lv_countersuffix);
        TextExpressionSetToken("Param/Expression/lib_5BD4895D_A595B870", "style_end", StringExternal("Param/Value/lib_5BD4895D_D237E34D"));
        lv_countertext = (TextExpressionAssemble("Param/Expression/lib_5BD4895D_A595B870"));
    }

    if ((lp_hasTimer == true)) {
        TextExpressionSetToken("Param/Expression/lib_5BD4895D_EB3C1E76", "style_start", StringExternal("Param/Value/lib_5BD4895D_AA4B4F01"));
        TextExpressionSetToken("Param/Expression/lib_5BD4895D_EB3C1E76", "timer_text", TextTimeFormat(StringToText("<min2/>:<sec2/>"), FixedToInt(TimerGetRemaining(lp_timer))));
        TextExpressionSetToken("Param/Expression/lib_5BD4895D_EB3C1E76", "style_end", StringExternal("Param/Value/lib_5BD4895D_2F0860FC"));
        lv_timer = (TextExpressionAssemble("Param/Expression/lib_5BD4895D_EB3C1E76"));
    }

    if ((lp_finished == true)) {
        lv_finishedstrip = TextExpressionAssemble("Param/Expression/lib_5BD4895D_AEBB48E6");
    }

    TextExpressionSetToken("Param/Expression/lib_5BD4895D_C0906947", "finished", lv_finishedstrip);
    TextExpressionSetToken("Param/Expression/lib_5BD4895D_C0906947", "text", lp_text);
    TextExpressionSetToken("Param/Expression/lib_5BD4895D_C0906947", "counter_text", lv_countertext);
    TextExpressionSetToken("Param/Expression/lib_5BD4895D_C0906947", "timer_text", lv_timer);
    TextExpressionSetToken("Param/Expression/lib_5BD4895D_C0906947", "checks_text", lv_checkstext);
    return (TextExpressionAssemble("Param/Expression/lib_5BD4895D_C0906947"));
}

int lib5BD4895D_gf_AP_Core_getNumOfObjectiveLocations (int lp_objective) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;
    int lv_index;
    int lv_count;

    // Automatic Variable Declarations
    int auto16908517_ae;
    const int auto16908517_ai = 1;

    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if ((lv_objectiveindex == -1)) {
        return 0;
    }

    auto16908517_ae = (lib5BD4895D_gv_aP_Core_LOCATIONS_PER_MAP - 1);
    lv_index = 0;
    for ( ; ( (auto16908517_ai >= 0 && lv_index <= auto16908517_ae) || (auto16908517_ai < 0 && lv_index >= auto16908517_ae) ) ; lv_index += auto16908517_ai ) {
        if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_locations[lv_index] != -1)) {
            lv_count += 1;
        }

    }
    return lv_count;
}

int lib5BD4895D_gf_AP_Core_locationToObjective (int lp_locationID) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;
    int lv_locationindex;

    // Automatic Variable Declarations
    int auto23B4A4BE_ae;
    const int auto23B4A4BE_ai = 1;
    int autoF9E8AC3D_ae;
    const int autoF9E8AC3D_ai = 1;
    int auto33CF2460_ae;
    const int auto33CF2460_ai = 1;

    // Variable Initialization

    // Implementation
    auto23B4A4BE_ae = (lib5BD4895D_gv_aP_Core_objectiveUsedCategories - 1);
    lv_categoryindex = 0;
    for ( ; ( (auto23B4A4BE_ai >= 0 && lv_categoryindex <= auto23B4A4BE_ae) || (auto23B4A4BE_ai < 0 && lv_categoryindex >= auto23B4A4BE_ae) ) ; lv_categoryindex += auto23B4A4BE_ai ) {
        autoF9E8AC3D_ae = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex - 1);
        lv_objectiveindex = 0;
        for ( ; ( (autoF9E8AC3D_ai >= 0 && lv_objectiveindex <= autoF9E8AC3D_ae) || (autoF9E8AC3D_ai < 0 && lv_objectiveindex >= autoF9E8AC3D_ae) ) ; lv_objectiveindex += autoF9E8AC3D_ai ) {
            auto33CF2460_ae = (lib5BD4895D_gv_aP_Core_LOCATIONS_PER_MAP - 1);
            lv_locationindex = 0;
            for ( ; ( (auto33CF2460_ai >= 0 && lv_locationindex <= auto33CF2460_ae) || (auto33CF2460_ai < 0 && lv_locationindex >= auto33CF2460_ae) ) ; lv_locationindex += auto33CF2460_ai ) {
                if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_locations[lv_locationindex] == lp_locationID)) {
                    return lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_objective;
                }

            }
        }
    }
    return c_invalidObjectiveId;
}

void lib5BD4895D_gf_AP_Core_associateObjectiveWithLocation (int lp_objective, int lp_locationID) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;
    int lv_locationindex;

    // Automatic Variable Declarations
    int autoFF749E50_ae;
    const int autoFF749E50_ai = 1;

    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if (((lv_objectiveindex == -1) || (lp_locationID <= -1) || (lib5BD4895D_gv_aP_Core_locationCollectable[lp_locationID] == false))) {
        return ;
    }

    autoFF749E50_ae = (lib5BD4895D_gv_aP_Core_LOCATIONS_PER_MAP - 1);
    lv_locationindex = 0;
    for ( ; ( (autoFF749E50_ai >= 0 && lv_locationindex <= autoFF749E50_ae) || (autoFF749E50_ai < 0 && lv_locationindex >= autoFF749E50_ae) ) ; lv_locationindex += autoFF749E50_ai ) {
        if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_locations[lv_locationindex] == -1)) {
            lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_locations[lv_locationindex] = lp_locationID;
            return ;
        }

    }
    TextExpressionSetToken("Param/Expression/lib_5BD4895D_C3A5CCFD", "A", IntToText(lp_locationID));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaError, TextExpressionAssemble("Param/Expression/lib_5BD4895D_C3A5CCFD"));
}

void lib5BD4895D_gf_AP_Core_disassociateLocationFromObjective (int lp_objective, int lp_locationID) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;
    int lv_locationindex;

    // Automatic Variable Declarations
    int autoF187F783_ae;
    const int autoF187F783_ai = 1;

    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if (((lp_locationID <= -1) || (lv_objectiveindex == -1))) {
        return ;
    }

    autoF187F783_ae = (lib5BD4895D_gv_aP_Core_LOCATIONS_PER_MAP - 1);
    lv_locationindex = 0;
    for ( ; ( (autoF187F783_ai >= 0 && lv_locationindex <= autoF187F783_ae) || (autoF187F783_ai < 0 && lv_locationindex >= autoF187F783_ae) ) ; lv_locationindex += autoF187F783_ai ) {
        if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_locations[lv_locationindex] == lp_locationID)) {
            lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_locations[lv_locationindex] = -1;
            return ;
        }

    }
}

void lib5BD4895D_gf_AP_Core_collectLocationUpdateObjective (int lp_locationID) {
    // Variable Declarations
    int lv_objective;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_objective = c_invalidObjectiveId;

    // Implementation
    if (((lp_locationID <= -1))) {
        return ;
    }

    if ((lib5BD4895D_gv_aP_Core_locationCollectable[lp_locationID] == true)) {
        lv_objective = lib5BD4895D_gf_AP_Core_locationToObjective(lp_locationID);
        if ((lv_objective != c_invalidObjectiveId)) {
            lib5BD4895D_gf_AP_Core_disassociateLocationFromObjective(lv_objective, lp_locationID);
            lib5BD4895D_gf_AP_Core_updateObjectiveChecks(lv_objective);
        }

    }

    if ((lib5BD4895D_gf_AP_Core_isLocationSent(lp_locationID) == false)) {
        lib5BD4895D_gf_AP_Core_sendLocationLocal(lp_locationID);
    }

}

void lib5BD4895D_gf_AP_Core_updateObjectiveText (int lp_category, int lp_index) {
    // Variable Declarations
    int lv_objective;
    int lv_checks;
    bool lv_hascounter;
    int lv_countervalue;
    int lv_countermax;
    string lv_countersuffix;
    bool lv_hastimer;
    timer lv_timer;
    bool lv_finished;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_objective = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_index].lv_objective;
    lv_checks = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_index].lv_checks;
    lv_hascounter = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_index].lv_hasCounter;
    lv_countervalue = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_index].lv_counterValue;
    lv_countermax = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_index].lv_counterMax;
    lv_countersuffix = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_index].lv_counterSuffix;
    lv_hastimer = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_index].lv_hasTimer;
    lv_timer = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_index].lv_timer;
    lv_finished = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_index].lv_finished;

    // Implementation
    libNtve_gf_SetDialogItemText(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_index].lv_label, lib5BD4895D_gf_AP_Core_objectiveText(ObjectiveGetName(lv_objective), lv_checks, lv_hascounter, lv_countersuffix, lv_countervalue, lv_countermax, lv_hastimer, lv_timer, lv_finished), PlayerGroupAll());
}

void lib5BD4895D_gf_AP_Core_setObjectiveCompleted (int lp_objective) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if ((lv_objectiveindex == -1)) {
        return ;
    }

    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_finished = true;
    libNtve_gf_SetDialogItemStyle(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_label, "ObjectivePanelCompleted", PlayerGroupAll());
    lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate(lv_categoryindex, lv_objectiveindex);
    DialogControlCreateInPanelFromTemplate(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_panel, c_triggerControlTypeImage, "ObjectivePanel/ObjectivePanelListBoxItem/Checkmark");
}

void lib5BD4895D_gf_AP_Core_setObjectiveFailed (int lp_objective) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if ((lv_objectiveindex == -1)) {
        return ;
    }

    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_finished = true;
    libNtve_gf_SetDialogItemStyle(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_label, "ObjectivePanelFailed", PlayerGroupAll());
    lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate(lv_categoryindex, lv_objectiveindex);
    libNtve_gf_SetDialogItemImage(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_checkbox, ("@@UI/ObjectivePanelCheckboxFailed"), PlayerGroupAll());
}

trigger auto_lib5BD4895D_gf_AP_Core_objectiveFadeHelper_Trigger = null;
fixed auto_lib5BD4895D_gf_AP_Core_objectiveFadeHelper_lp_time;

void lib5BD4895D_gf_AP_Core_objectiveFadeHelper (fixed lp_time) {
    auto_lib5BD4895D_gf_AP_Core_objectiveFadeHelper_lp_time = lp_time;

    if (auto_lib5BD4895D_gf_AP_Core_objectiveFadeHelper_Trigger == null) {
        auto_lib5BD4895D_gf_AP_Core_objectiveFadeHelper_Trigger = TriggerCreate("auto_lib5BD4895D_gf_AP_Core_objectiveFadeHelper_TriggerFunc");
    }

    TriggerExecute(auto_lib5BD4895D_gf_AP_Core_objectiveFadeHelper_Trigger, false, false);
}

bool auto_lib5BD4895D_gf_AP_Core_objectiveFadeHelper_TriggerFunc (bool testConds, bool runActions) {
    fixed lp_time = auto_lib5BD4895D_gf_AP_Core_objectiveFadeHelper_lp_time;

    // Automatic Variable Declarations
    // Implementation
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_fadeWait = true;
    Wait(lp_time, c_timeReal);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_fadeWait = false;
    return true;
}

void lib5BD4895D_gf_AP_Core_Util_FixPlayerMaxSupplyAfterRaceSwap (int lp_player) {
    // Automatic Variable Declarations
    // Implementation
    PlayerModifyPropertyFixed(lp_player, c_playerPropSuppliesLimit, c_playerPropOperSetTo, (200 + lib5BD4895D_gv_aP_Core_BonusMaxSupply));
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_mapLoadStart
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_mapLoadStart_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    DialogCreate(4000, 3000, c_anchorCenter, 0, 0, true);
    lib5BD4895D_gv_aP_Core_blackScreen_dialog = DialogLastCreated();
    DialogSetImageVisible(lib5BD4895D_gv_aP_Core_blackScreen_dialog, false);
    DialogControlCreate(lib5BD4895D_gv_aP_Core_blackScreen_dialog, c_triggerControlTypeImage);
    lib5BD4895D_gv_aP_Core_blackScreen = DialogControlLastCreated();
    DialogControlSetFullDialog(lib5BD4895D_gv_aP_Core_blackScreen, PlayerGroupAll(), true);
    libNtve_gf_SetDialogItemImage(lib5BD4895D_gv_aP_Core_blackScreen, "Assets\\Textures\\ui_ingame_blackmask.dds", PlayerGroupAll());
    libNtve_gf_SetDialogItemBlendMode(lib5BD4895D_gv_aP_Core_blackScreen, c_triggerBlendModeAlpha, PlayerGroupAll());
    DialogSetVisible(lib5BD4895D_gv_aP_Core_blackScreen_dialog, PlayerGroupAll(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_mapLoadStart_Init () {
    lib5BD4895D_gt_AP_Core_mapLoadStart = TriggerCreate("lib5BD4895D_gt_AP_Core_mapLoadStart_Func");
    TriggerAddEventMapInit(lib5BD4895D_gt_AP_Core_mapLoadStart);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_mapLoadEnd
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_mapLoadEnd_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_duration;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_duration = 0.25;

    // Conditions
    if (testConds) {
        if (!((lib5BD4895D_gv_aP_Core_initFinished == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    DialogControlFadeTransparency(lib5BD4895D_gv_aP_Core_blackScreen, PlayerGroupAll(), lv_duration, 0.0);
    Wait(lv_duration, c_timeReal);
    DialogDestroy(lib5BD4895D_gv_aP_Core_blackScreen_dialog);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_mapLoadEnd_Init () {
    lib5BD4895D_gt_AP_Core_mapLoadEnd = TriggerCreate("lib5BD4895D_gt_AP_Core_mapLoadEnd_Func");
    TriggerAddEventTimePeriodic(lib5BD4895D_gt_AP_Core_mapLoadEnd, 0.1, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_controllerInit
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_controllerInit_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if (lib5BD4895D_gf_AP_Core_IsControllerNotInitialized()) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "AP_Core_Controller", c_unitCreateIgnorePlacement, 1, Point(0.0, 0.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "AP_Core_Controller2", c_unitCreateIgnorePlacement, 1, Point(0.0, 0.0));
    }

    lib5BD4895D_gv_aP_Core_controller = UnitGroupUnit(UnitGroup("AP_Core_Controller", 1, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1);
    lib5BD4895D_gv_aP_Core_controller2 = UnitGroupUnit(UnitGroup("AP_Core_Controller2", 1, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_controllerInit_Init () {
    lib5BD4895D_gt_AP_Core_controllerInit = TriggerCreate("lib5BD4895D_gt_AP_Core_controllerInit_Func");
    TriggerAddEventMapInit(lib5BD4895D_gt_AP_Core_controllerInit);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_dontHideController
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_dontHideController_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libNtve_gf_UnitIsHidden(lib5BD4895D_gv_aP_Core_controller) == true))) {
            return false;
        }

        if (!((libNtve_gf_UnitIsHidden(lib5BD4895D_gv_aP_Core_controller2) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_ShowHideUnit(lib5BD4895D_gv_aP_Core_controller, true);
    libNtve_gf_ShowHideUnit(lib5BD4895D_gv_aP_Core_controller2, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_dontHideController_Init () {
    lib5BD4895D_gt_AP_Core_dontHideController = TriggerCreate("lib5BD4895D_gt_AP_Core_dontHideController_Func");
    TriggerAddEventTimePeriodic(lib5BD4895D_gt_AP_Core_dontHideController, 0.1, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_keepControllerAlive
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_keepControllerAlive_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(lib5BD4895D_gf_AP_Core_IsControllerNotInitialized())) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib5BD4895D_gf_AP_Core_refreshController();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_keepControllerAlive_Init () {
    lib5BD4895D_gt_AP_Core_keepControllerAlive = TriggerCreate("lib5BD4895D_gt_AP_Core_keepControllerAlive_Func");
    TriggerAddEventTimePeriodic(lib5BD4895D_gt_AP_Core_keepControllerAlive, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: update chatbox
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_updatechatbox_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib5BD4895D_gf_sendchatmessage(EventPlayer(), StringSub(EventChatMessage(false), 13, StringLength(EventChatMessage(false))));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_updatechatbox_Init () {
    lib5BD4895D_gt_updatechatbox = TriggerCreate("lib5BD4895D_gt_updatechatbox_Func");
    TriggerAddEventChatMessage(lib5BD4895D_gt_updatechatbox, c_playerAny, "?SendMessage", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_rainbowColorsInit
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_rainbowColorsInit_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib5BD4895D_gv_aP_Core_rainbowColors[0] = 1;
    lib5BD4895D_gv_aP_Core_rainbowColors[1] = 6;
    lib5BD4895D_gv_aP_Core_rainbowColors[2] = 5;
    lib5BD4895D_gv_aP_Core_rainbowColors[3] = 7;
    lib5BD4895D_gv_aP_Core_rainbowColors[4] = 3;
    lib5BD4895D_gv_aP_Core_rainbowColors[5] = 2;
    lib5BD4895D_gv_aP_Core_rainbowColors[6] = 4;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_rainbowColorsInit_Init () {
    lib5BD4895D_gt_AP_Core_rainbowColorsInit = TriggerCreate("lib5BD4895D_gt_AP_Core_rainbowColorsInit_Func");
    TriggerAddEventMapInit(lib5BD4895D_gt_AP_Core_rainbowColorsInit);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_tradeStart
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_tradeStart_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((lib5BD4895D_gv_aP_Core_tradeUnit != null))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libNtve_gf_TriggeringProgressUnitType() == lib5BD4895D_gv_aP_Core_tradeSendUnitType)) {
        if ((UnitGroupCount(UnitCargoGroup(lib5BD4895D_gv_aP_Core_tradeUnit), c_unitCountAlive) == 0)) {
            UnitIssueOrder(lib5BD4895D_gv_aP_Core_tradeUnit, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        }

    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_tradeStart_Init () {
    lib5BD4895D_gt_AP_Core_tradeStart = TriggerCreate("lib5BD4895D_gt_AP_Core_tradeStart_Func");
    TriggerAddEventUnitTrainProgress(lib5BD4895D_gt_AP_Core_tradeStart, UnitRefFromVariable("lib5BD4895D_gv_aP_Core_tradeUnit"), c_unitProgressStageStart);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_tradeFail
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_tradeFail_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_message;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_message = StringSub(EventChatMessage(false), 11, StringLength(EventChatMessage(false)));

    // Actions
    if (!runActions) {
        return true;
    }

    lib5BD4895D_gf_sendchatmessage(EventPlayer(), StringSub(EventChatMessage(false), 11, StringLength(EventChatMessage(false))));
    if ((lib5BD4895D_gv_aP_Core_tradeUnit != null) && (UnitIsAlive(lib5BD4895D_gv_aP_Core_tradeUnit) == true) && (UnitOrder(lib5BD4895D_gv_aP_Core_tradeUnit, 0) != null)) {
        UnitIssueOrder(lib5BD4895D_gv_aP_Core_tradeUnit, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_tradeFail_Init () {
    lib5BD4895D_gt_AP_Core_tradeFail = TriggerCreate("lib5BD4895D_gt_AP_Core_tradeFail_Func");
    TriggerAddEventChatMessage(lib5BD4895D_gt_AP_Core_tradeFail, c_playerAny, "?TradeFail", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_tradeSendSuccess
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_tradeSendSuccess_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoE5F28EA7_g;
    int autoE5F28EA7_u;
    unit autoE5F28EA7_var;

    // Actions
    if (!runActions) {
        return true;
    }

    lib5BD4895D_gf_sendchatmessage(EventPlayer(), StringSub(EventChatMessage(false), 14, StringLength(EventChatMessage(false))));
    if ((lib5BD4895D_gv_aP_Core_tradeUnit != null) && (UnitIsAlive(lib5BD4895D_gv_aP_Core_tradeUnit) == true) && (UnitOrder(lib5BD4895D_gv_aP_Core_tradeUnit, 0) != null)) {
        autoE5F28EA7_g = UnitCargoGroup(lib5BD4895D_gv_aP_Core_tradeUnit);
        autoE5F28EA7_u = UnitGroupCount(autoE5F28EA7_g, c_unitCountAll);
        for (;; autoE5F28EA7_u -= 1) {
            autoE5F28EA7_var = UnitGroupUnitFromEnd(autoE5F28EA7_g, autoE5F28EA7_u);
            if (autoE5F28EA7_var == null) { break; }
            UnitRemove(autoE5F28EA7_var);
            lib5BD4895D_gf_AP_Core_Trade_changeTradeCharges(1);
        }
        UnitIssueOrder(lib5BD4895D_gv_aP_Core_tradeUnit, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_tradeSendSuccess_Init () {
    lib5BD4895D_gt_AP_Core_tradeSendSuccess = TriggerCreate("lib5BD4895D_gt_AP_Core_tradeSendSuccess_Func");
    TriggerAddEventChatMessage(lib5BD4895D_gt_AP_Core_tradeSendSuccess, c_playerAny, "?TradeSuccess", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_tradeReceiveSuccess
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_tradeReceiveSuccess_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_refunds;
    int lv_word;
    string lv_unitType;
    int lv_unitCount;
    int lv_totalCount;
    int lv_mineralCost;
    int lv_vespeneCost;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_refunds = StringToInt(StringWord(EventChatMessage(false), 2));
    lv_word = 3;
    lv_mineralCost = UnitTypeGetCost(lib5BD4895D_gv_aP_Core_tradeReceiveUnitType, c_unitCostMinerals);
    lv_vespeneCost = UnitTypeGetCost(lib5BD4895D_gv_aP_Core_tradeReceiveUnitType, c_unitCostVespene);

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib5BD4895D_gv_aP_Core_tradeUnit != null) && (UnitIsAlive(lib5BD4895D_gv_aP_Core_tradeUnit) == true) && (UnitOrder(lib5BD4895D_gv_aP_Core_tradeUnit, 0) != null)) {
        UnitIssueOrder(lib5BD4895D_gv_aP_Core_tradeUnit, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        while ((StringWord(EventChatMessage(false), lv_word) != null)) {
            lv_unitType = (StringWord(EventChatMessage(false), lv_word));
            lv_unitCount = StringToInt(StringWord(EventChatMessage(false), (lv_word + 1)));
            lv_totalCount = (lv_totalCount + lv_unitCount);
            UnitCargoCreate(lib5BD4895D_gv_aP_Core_tradeUnit, lv_unitType, lv_unitCount);
            lv_word = (lv_word + 2);
        }
        PlayerModifyPropertyInt(UnitGetOwner(lib5BD4895D_gv_aP_Core_tradeUnit), c_playerPropMinerals, c_playerPropOperSubtract, (lv_mineralCost * lv_totalCount));
        PlayerModifyPropertyInt(UnitGetOwner(lib5BD4895D_gv_aP_Core_tradeUnit), c_playerPropVespene, c_playerPropOperSubtract, (lv_vespeneCost * lv_totalCount));
        lib5BD4895D_gf_AP_Core_Trade_changeTradeCharges((0 - lv_totalCount));
        if ((lv_totalCount == 0)) {
            lib5BD4895D_gf_sendchatmessage(EventPlayer(), (lib5BD4895D_gv_aP_Core_tradeFlavorName + " failed: No units were found. Trade cost refunded."));
        }
        else {
            if ((lv_refunds > 0)) {
                lib5BD4895D_gf_sendchatmessage(EventPlayer(), (lib5BD4895D_gv_aP_Core_tradeFlavorName + " partially successful: " + IntToString(lv_totalCount) + " units received, " + IntToString(lv_refunds) + " refunded."));
            }
            else {
                lib5BD4895D_gf_sendchatmessage(EventPlayer(), (lib5BD4895D_gv_aP_Core_tradeFlavorName + " successful: Units received!"));
            }
        }
    }
    else {
        lib5BD4895D_gf_sendchatmessage(EventPlayer(), (lib5BD4895D_gv_aP_Core_tradeFlavorName + " successful, but the trading structure couldn't be found. The received units are lost to the void..."));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_tradeReceiveSuccess_Init () {
    lib5BD4895D_gt_AP_Core_tradeReceiveSuccess = TriggerCreate("lib5BD4895D_gt_AP_Core_tradeReceiveSuccess_Func");
    TriggerAddEventChatMessage(lib5BD4895D_gt_AP_Core_tradeReceiveSuccess, c_playerAny, "?Trade ", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_giveStartingResources
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_giveStartingResources_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_oldStartingMinerals;
    int lv_oldStartingVespene;
    int lv_oldBonusMaxSupply;
    int lv_supplyAmount;
    int lv_currentPlayer;

    // Automatic Variable Declarations
    playergroup autoED0BFB0D_g;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_oldStartingMinerals = lib5BD4895D_gv_aP_Core_BonusMinerals;
    lv_oldStartingVespene = lib5BD4895D_gv_aP_Core_BonusVespene;
    lv_oldBonusMaxSupply = lib5BD4895D_gv_aP_Core_BonusMaxSupply;
    lib5BD4895D_gv_aP_Core_BonusMinerals = StringToInt(StringWord(EventChatMessage(false), 2));
    lib5BD4895D_gv_aP_Core_BonusVespene = StringToInt(StringWord(EventChatMessage(false), 3));
    lv_supplyAmount = StringToInt(StringWord(EventChatMessage(false), 4));
    lib5BD4895D_gv_aP_Core_BonusMaxSupply = StringToInt(StringWord(EventChatMessage(false), 5));
    autoED0BFB0D_g = lib5BD4895D_gv_aP_Core_affectedPlayers;
    lv_currentPlayer = -1;
    while (true) {
        lv_currentPlayer = PlayerGroupNextPlayer(autoED0BFB0D_g, lv_currentPlayer);
        if (lv_currentPlayer < 0) { break; }
        PlayerModifyPropertyInt(lv_currentPlayer, c_playerPropMinerals, c_playerPropOperAdd, (lib5BD4895D_gv_aP_Core_BonusMinerals - lv_oldStartingMinerals));
        PlayerModifyPropertyInt(lv_currentPlayer, c_playerPropVespene, c_playerPropOperAdd, (lib5BD4895D_gv_aP_Core_BonusVespene - lv_oldStartingVespene));
        lib5BD4895D_gf_AP_Core_giveBonusSupplies(lv_currentPlayer, lv_supplyAmount);
        PlayerModifyPropertyInt(lv_currentPlayer, c_playerPropSuppliesLimit, c_playerPropOperAdd, (lib5BD4895D_gv_aP_Core_BonusMaxSupply - lv_oldBonusMaxSupply));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_giveStartingResources_Init () {
    lib5BD4895D_gt_AP_Core_giveStartingResources = TriggerCreate("lib5BD4895D_gt_AP_Core_giveStartingResources_Func");
    TriggerAddEventChatMessage(lib5BD4895D_gt_AP_Core_giveStartingResources, c_playerAny, "?GiveResources", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_setFactionColorHandler
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_setFactionColorHandler_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_faction;
    int lv_color;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_faction = "";

    // Actions
    if (!runActions) {
        return true;
    }

    lv_faction = StringWord(EventChatMessage(false), 2);
    lv_color = StringToInt(StringWord(EventChatMessage(false), 3));
    lib5BD4895D_gf_AP_Core_setFactionColor(lv_faction, lv_color);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_setFactionColorHandler_Init () {
    lib5BD4895D_gt_AP_Core_setFactionColorHandler = TriggerCreate("lib5BD4895D_gt_AP_Core_setFactionColorHandler_Func");
    TriggerAddEventChatMessage(lib5BD4895D_gt_AP_Core_setFactionColorHandler, c_playerAny, "?SetColor", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Triggers_loadFinished
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Triggers_loadFinished_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib5BD4895D_gf_AP_Core_onLoadFinished();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Triggers_loadFinished_Init () {
    lib5BD4895D_gt_AP_Triggers_loadFinished = TriggerCreate("lib5BD4895D_gt_AP_Triggers_loadFinished_Func");
    TriggerAddEventChatMessage(lib5BD4895D_gt_AP_Triggers_loadFinished, c_playerAny, "?LoadFinished", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Triggers_uncollectedLocations
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Triggers_uncollectedLocations_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_index;
    string lv_word;
    int lv_locationIdLocal;

    // Automatic Variable Declarations
    int auto515366FE_ae;
    const int auto515366FE_ai = 1;

    // Variable Initialization
    lv_word = "";

    // Actions
    if (!runActions) {
        return true;
    }

    auto515366FE_ae = (2 + lib5BD4895D_gv_aP_Core_LOCATIONS_PER_MAP);
    lv_index = 2;
    for ( ; ( (auto515366FE_ai >= 0 && lv_index <= auto515366FE_ae) || (auto515366FE_ai < 0 && lv_index >= auto515366FE_ae) ) ; lv_index += auto515366FE_ai ) {
        lv_word = StringWord(EventChatMessage(false), lv_index);
        if ((lv_word != null) && (lv_word != "") && (lv_word != " ")) {
            lv_locationIdLocal = StringToInt(lv_word);
            if ((lv_locationIdLocal <= lib5BD4895D_gv_aP_Core_LOCATIONS_PER_MAP)) {
                lib5BD4895D_gv_aP_Core_locationCollectable[lv_locationIdLocal] = true;
            }

        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Triggers_uncollectedLocations_Init () {
    lib5BD4895D_gt_AP_Triggers_uncollectedLocations = TriggerCreate("lib5BD4895D_gt_AP_Triggers_uncollectedLocations_Func");
    TriggerAddEventChatMessage(lib5BD4895D_gt_AP_Triggers_uncollectedLocations, c_playerAny, "?UncollectedLocations", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_clearChat
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_clearChat_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UIClearMessages(PlayerGroupAll(), c_messageAreaChat);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_clearChat_Init () {
    lib5BD4895D_gt_AP_Core_clearChat = TriggerCreate("lib5BD4895D_gt_AP_Core_clearChat_Func");
    TriggerAddEventChatMessage(lib5BD4895D_gt_AP_Core_clearChat, c_playerAny, "", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_objectiveTimerUpdate
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_objectiveTimerUpdate_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_timerindex;
    int lv_categoryindex;
    int lv_objectiveindex;

    // Automatic Variable Declarations
    int autoF95675BF_ae;
    const int autoF95675BF_ai = 1;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    autoF95675BF_ae = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex - 1);
    lv_timerindex = 0;
    for ( ; ( (autoF95675BF_ai >= 0 && lv_timerindex <= autoF95675BF_ae) || (autoF95675BF_ai < 0 && lv_timerindex >= autoF95675BF_ae) ) ; lv_timerindex += autoF95675BF_ai ) {
        lv_categoryindex = lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lv_timerindex][0];
        if ((lv_categoryindex >= 0)) {
            lv_objectiveindex = lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lv_timerindex][1];
            if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_waiting == false)) {
                lib5BD4895D_gf_AP_Core_updateObjectiveText(lv_categoryindex, lv_objectiveindex);
            }

        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_objectiveTimerUpdate_Init () {
    lib5BD4895D_gt_AP_Core_objectiveTimerUpdate = TriggerCreate("lib5BD4895D_gt_AP_Core_objectiveTimerUpdate_Func");
    TriggerEnable(lib5BD4895D_gt_AP_Core_objectiveTimerUpdate, false);
    TriggerAddEventTimePeriodic(lib5BD4895D_gt_AP_Core_objectiveTimerUpdate, 1.0, c_timeAI);
}

void lib5BD4895D_InitTriggers () {
    lib5BD4895D_gt_AP_Core_mapLoadStart_Init();
    lib5BD4895D_gt_AP_Core_mapLoadEnd_Init();
    lib5BD4895D_gt_AP_Core_controllerInit_Init();
    lib5BD4895D_gt_AP_Core_dontHideController_Init();
    lib5BD4895D_gt_AP_Core_keepControllerAlive_Init();
    lib5BD4895D_gt_updatechatbox_Init();
    lib5BD4895D_gt_AP_Core_rainbowColorsInit_Init();
    lib5BD4895D_gt_AP_Core_tradeStart_Init();
    lib5BD4895D_gt_AP_Core_tradeFail_Init();
    lib5BD4895D_gt_AP_Core_tradeSendSuccess_Init();
    lib5BD4895D_gt_AP_Core_tradeReceiveSuccess_Init();
    lib5BD4895D_gt_AP_Core_giveStartingResources_Init();
    lib5BD4895D_gt_AP_Core_setFactionColorHandler_Init();
    lib5BD4895D_gt_AP_Triggers_loadFinished_Init();
    lib5BD4895D_gt_AP_Triggers_uncollectedLocations_Init();
    lib5BD4895D_gt_AP_Core_clearChat_Init();
    lib5BD4895D_gt_AP_Core_objectiveTimerUpdate_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_InitLib_completed = false;

void lib5BD4895D_InitLib () {
    if (lib5BD4895D_InitLib_completed) {
        return;
    }

    lib5BD4895D_InitLib_completed = true;

    lib5BD4895D_InitLibraries();
    lib5BD4895D_InitVariables();
    lib5BD4895D_InitTriggers();
}

